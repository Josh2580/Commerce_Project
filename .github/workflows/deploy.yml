name: Deploy to AWS ECS

on:
  push:
    paths:
      - "frontend/**"
      - "backend/**"
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_FRONTEND_REPOSITORY_NAME: ${{ secrets.ECR_FRONTEND_REPOSITORY_NAME }}
  ECR_BACKEND_REPOSITORY_NAME: ${{ secrets.ECR_BACKEND_REPOSITORY_NAME }}
  ECS_CLUSTER_NAME: ${{ secrets.ECS_CLUSTER_NAME }}
  ECS_FRONTEND_SERVICE_NAME: ${{ secrets.ECS_FRONTEND_SERVICE_NAME }}
  ECS_BACKEND_SERVICE_NAME: ${{ secrets.ECS_BACKEND_SERVICE_NAME }}

jobs:
  # Frontend Deployment Job
  deploy-frontend:
    if: contains(github.event.head_commit.message, 'frontend')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout frontend code
        uses: actions/checkout@v3
        with:
          path: ./frontend

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build frontend Docker image
        working-directory: ./frontend
        run: docker build -t ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_FRONTEND_REPOSITORY_NAME }}:latest .

      - name: Push frontend Docker image to ECR
        run: docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_FRONTEND_REPOSITORY_NAME }}:latest

      - name: Update frontend service in ECS
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER_NAME }} --service ${{ env.ECS_FRONTEND_SERVICE_NAME }} --force-new-deployment --region ${{ env.AWS_REGION }}

  # Backend Deployment Job
  deploy-backend:
    if: contains(github.event.head_commit.message, 'backend')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout backend code
        uses: actions/checkout@v3
        with:
          path: ./backend

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build backend Docker image
        working-directory: ./backend
        run: docker build -t ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_BACKEND_REPOSITORY_NAME }}:latest .

      - name: Push backend Docker image to ECR
        run: docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_BACKEND_REPOSITORY_NAME }}:latest

      - name: Update backend service in ECS
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER_NAME }} --service ${{ env.ECS_BACKEND_SERVICE_NAME }} --force-new-deployment --region ${{ env.AWS_REGION }}
